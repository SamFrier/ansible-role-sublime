// Place your settings in the file "User/Preferences.sublime-settings", which
// overrides the settings in here.
//
// Settings may also be placed in file type specific options files, for
// example, in Packages/Python/Python.sublime-settings for python files.
{
    // Sets the colors used within the text area
    "color_scheme": "{{ sublime_prefs.color_scheme }}",

    // Note that the font_face and font_size are overridden in the platform
    // specific settings file, for example, "Preferences (Linux).sublime-settings".
    // Because of this, setting them here will have no effect: you must set them
    // in your User File Preferences.
    "font_face": "{{ sublime_prefs.font_face }}",
    "font_size": "{{ sublime_prefs.font_size }}",

    // Valid options are "no_bold", "no_italic", "no_antialias", "gray_antialias",
    // "subpixel_antialias", "no_round" (OS X only), "gdi" (Windows only) and
    // "directwrite" (Windows only)
    "font_options": "{{ sublime_prefs.font_options }}",

    // Characters that are considered to separate words
    "word_separators": "{% raw %}{{ sublime_prefs.word_separators }}{% endraw %}",

    // Set to false to prevent line numbers being drawn in the gutter
    "line_numbers": "{{ sublime_prefs.line_numbers }}",

    // Set to false to hide the gutter altogether
    "gutter": "{{ sublime_prefs.gutter }}",

    // Spacing between the gutter and the text
    "margin": "{{ sublime_prefs.margin }}",

    // Fold buttons are the triangles shown in the gutter to fold regions of text
    "fold_buttons": "{{ sublime_prefs.fold_buttons }}",

    // Hides the fold buttons unless the mouse is over the gutter
    "fade_fold_buttons": "{{ sublime_prefs.fade_fold_buttons }}",

    // Columns in which to display vertical rulers
    "rulers": "{{ sublime_prefs.rulers }}",

    // Set to true to turn spell checking on by default
    "spell_check": "{{ sublime_prefs.spell_check }}",

    // The number of spaces a tab is considered equal to
    "tab_size": "{{ sublime_prefs.tab_size }}",

    // Set to true to insert spaces when tab is pressed
    "translate_tabs_to_spaces": "{{ sublime_prefs.translate_tabs_to_spaces }}",

    // If translate_tabs_to_spaces is true, use_tab_stops will make tab and
    // backspace insert/delete up to the next tabstop
    "use_tab_stops": "{{ sublime_prefs.use_tab_stops }}",

    // Set to false to disable detection of tabs vs. spaces on load
    "detect_indentation": "{{ sublime_prefs.detect_indentation }}",

    // Calculates indentation automatically when pressing enter
    "auto_indent": "{{ sublime_prefs.auto_indent }}",

    // Makes auto indent a little smarter, e.g., by indenting the next line
    // after an if statement in C. Requires auto_indent to be enabled.
    "smart_indent": "{{ sublime_prefs.smart_indent }}",

    // Adds whitespace up to the first open bracket when indenting. Requires
    // auto_indent to be enabled.
    "indent_to_bracket": "{{ sublime_prefs.indent_to_bracket }}",

    // Trims white space added by auto_indent when moving the caret off the
    // line.
    "trim_automatic_white_space": "{{ sublime_prefs.trim_automatic_white_space }}",

    // Disables horizontal scrolling if enabled.
    // May be set to true, false, or "auto", where it will be disabled for
    // source code, and otherwise enabled.
    "word_wrap": "{{ sublime_prefs.word_wrap }}",

    // Set to a value other than 0 to force wrapping at that column rather than the
    // window width
    "wrap_width": "{{ sublime_prefs.wrap_width }}",

    // Set to false to prevent word wrapped lines from being indented to the same
    // level
    "indent_subsequent_lines": "{{ sublime_prefs.indent_subsequent_lines }}",

    // Draws text centered in the window rather than left aligned
    "draw_centered": "{{ sublime_prefs.draw_centered }}",

    // Controls auto pairing of quotes, brackets etc
    "auto_match_enabled": "{{ sublime_prefs.auto_match_enabled }}",

    // Word list to use for spell checking
    "dictionary": "{{ sublime_prefs.dictionary }}",

    // Sets which scopes are checked for spelling errors
    "spelling_selector": "{{ sublime_prefs.spelling_selector }}",

    // Set to true to draw a border around the visible rectangle on the minimap.
    // The color of the border will be determined by the "minimapBorder" key in
    // the color scheme
    "draw_minimap_border": "{{ sublime_prefs.draw_minimap_border }}",

    // Always visualise the viewport on the minimap, as opposed to only
    // showing it on mouse over
    "always_show_minimap_viewport": "{{ sublime_prefs.always_show_minimap_viewport }}",

    // If enabled, will highlight any line with a caret
    "highlight_line": "{{ sublime_prefs.highlight_line }}",

    // Valid values are "smooth", "phase", "blink" and "solid".
    "caret_style": "{{ sublime_prefs.caret_style }}",

    // These settings control the size of the caret
    "caret_extra_top": "{{ sublime_prefs.caret_extra_top }}",
    "caret_extra_bottom": "{{ sublime_prefs.caret_extra_bottom }}",
    "caret_extra_width": "{{ sublime_prefs.caret_extra_width }}",

    // Set to false to disable underlining the brackets surrounding the caret
    "match_brackets": "{{ sublime_prefs.match_brackets }}",

    // Set to false if you'd rather only highlight the brackets when the caret is
    // next to one
    "match_brackets_content": "{{ sublime_prefs.match_brackets_content }}",

    // Set to false to not highlight square brackets. This only takes effect if
    // match_brackets is true
    "match_brackets_square": "{{ sublime_prefs.match_brackets_square }}",

    // Set to false to not highlight curly brackets. This only takes effect if
    // match_brackets is true
    "match_brackets_braces": "{{ sublime_prefs.match_brackets_braces }}",

    // Set to false to not highlight angle brackets. This only takes effect if
    // match_brackets is true
    "match_brackets_angle": "{{ sublime_prefs.match_brackets_angle }}",

    // Enable visualization of the matching tag in HTML and XML
    "match_tags": "{{ sublime_prefs.match_tags }}",

    // Highlights other occurrences of the currently selected text
    "match_selection": "{{ sublime_prefs.match_selection }}",

    // Additional spacing at the top of each line, in pixels
    "line_padding_top": "{{ sublime_prefs.line_padding_top }}",

    // Additional spacing at the bottom of each line, in pixels
    "line_padding_bottom": "{{ sublime_prefs.line_padding_bottom }}",

    // Set to false to disable scrolling past the end of the buffer.
    // On OS X, this value is overridden in the platform specific settings, so
    // you'll need to place this line in your user settings to override it.
    "scroll_past_end": "{{ sublime_prefs.scroll_past_end }}",

    // This controls what happens when pressing up or down when on the first
    // or last line.
    // On OS X, this value is overridden in the platform specific settings, so
    // you'll need to place this line in your user settings to override it.
    "move_to_limit_on_up_down": "{{ sublime_prefs.move_to_limit_on_up_down }}",

    // Set to "none" to turn off drawing white space, "selection" to draw only the
    // white space within the selection, and "all" to draw all white space
    "draw_white_space": "{{ sublime_prefs.draw_white_space }}",

    // Set to false to turn off the indentation guides.
    // The color and width of the indent guides may be customized by editing
    // the corresponding .tmTheme file, and specifying the colors "guide",
    // "activeGuide" and "stackGuide"
    "draw_indent_guides": "{{ sublime_prefs.draw_indent_guides }}",

    // Controls how the indent guides are drawn, valid options are
    // "draw_normal" and "draw_active". draw_active will draw the indent
    // guides containing the caret in a different color.
    "indent_guide_options": "{{ sublime_prefs.indent_guide_options }}",

    // Set to true to removing trailing white space on save
    "trim_trailing_white_space_on_save": "{{ sublime_prefs.trim_trailing_white_space_on_save }}",

    // Set to true to ensure the last line of the file ends in a newline
    // character when saving
    "ensure_newline_at_eof_on_save": "{{ sublime_prefs.ensure_newline_at_eof_on_save }}",

    // Set to true to automatically save files when switching to a different file
    // or application
    "save_on_focus_lost": "{{ sublime_prefs.save_on_focus_lost }}",

    // Save via writing to an alternate file, and then renaming it over the
    // original file.
    "atomic_save": "{{ sublime_prefs.atomic_save }}",

    // The encoding to use when the encoding can't be determined automatically.
    // ASCII, UTF-8 and UTF-16 encodings will be automatically detected.
    "fallback_encoding": "{{ sublime_prefs.fallback_encoding }}",

    // Encoding used when saving new files, and files opened with an undefined
    // encoding (e.g., plain ascii files). If a file is opened with a specific
    // encoding (either detected or given explicitly), this setting will be
    // ignored, and the file will be saved with the encoding it was opened
    // with.
    "default_encoding": "{{ sublime_prefs.default_encoding }}",

    // Files containing null bytes are opened as hexadecimal by default
    "enable_hexadecimal_encoding": "{{ sublime_prefs.enable_hexadecimal_encoding }}",

    // Determines what character(s) are used to terminate each line in new files.
    // Valid values are 'system' (whatever the OS uses), 'windows' (CRLF) and
    // 'unix' (LF only).
    "default_line_ending": "{{ sublime_prefs.default_line_ending }}",

    // When enabled, pressing tab will insert the best matching completion.
    // When disabled, tab will only trigger snippets or insert a tab.
    // Shift+tab can be used to insert an explicit tab when tab_completion is
    // enabled.
    "tab_completion": "{{ sublime_prefs.tab_completion }}",

    // Enable auto complete to be triggered automatically when typing.
    "auto_complete": "{{ sublime_prefs.auto_complete }}",

    // The maximum file size where auto complete will be automatically triggered.
    "auto_complete_size_limit": "{{ sublime_prefs.auto_complete_size_limit }}",

    // The delay, in ms, before the auto complete window is shown after typing
    "auto_complete_delay": "{{ sublime_prefs.auto_complete_delay }}",

    // Controls what scopes auto complete will be triggered in
    "auto_complete_selector": "{{ sublime_prefs.auto_complete_selector }}",

    // Additional situations to trigger auto complete
    "auto_complete_triggers": {{ sublime_prefs.auto_complete_triggers }},

    // By default, auto complete will commit the current completion on enter.
    // This setting can be used to make it complete on tab instead.
    // Completing on tab is generally a superior option, as it removes
    // ambiguity between committing the completion and inserting a newline.
    "auto_complete_commit_on_tab": "{{ sublime_prefs.auto_complete_commit_on_tab }}",

    // Controls if auto complete is shown when snippet fields are active.
    // Only relevant if auto_complete_commit_on_tab is true.
    "auto_complete_with_fields": "{{ sublime_prefs.auto_complete_with_fields }}",

    // Controls what happens when pressing the up key while the first item in
    // the auto complete window is selected: if false, the window is hidden,
    // otherwise the last item in the window is selected. Likewise for the
    // down key when the last item is selected.
    "auto_complete_cycle": "{{ sublime_prefs.auto_complete_cycle }}",

    // Automatically close HTML and XML tags when </ is entered.
    "auto_close_tags": "{{ sublime_prefs.auto_close_tags }}",

    // By default, shift+tab will only unindent if the selection spans
    // multiple lines. When pressing shift+tab at other times, it'll insert a
    // tab character - this allows tabs to be inserted when tab_completion is
    // enabled. Set this to true to make shift+tab always unindent, instead of
    // inserting tabs.
    "shift_tab_unindent": "{{ sublime_prefs.shift_tab_unindent }}",

    // If true, the copy and cut commands will operate on the current line
    // when the selection is empty, rather than doing nothing.
    "copy_with_empty_selection": "{{ sublime_prefs.copy_with_empty_selection }}",

    // If true, the selected text will be copied into the find panel when it's
    // shown.
    // On OS X, this value is overridden in the platform specific settings, so
    // you'll need to place this line in your user settings to override it.
    "find_selected_text": "{{ sublime_prefs.find_selected_text }}",

    // When auto_find_in_selection is enabled, the "Find in Selection" flag
    // will be enabled automatically when multiple lines of text are selected
    "auto_find_in_selection": "{{ sublime_prefs.auto_find_in_selection }}",

    // When drag_text is enabled, clicking on selected text will begin a
    // drag-drop operation. This is not currently implemented under Linux.
    "drag_text": "{{ sublime_prefs.drag_text }}",

    //
    // User Interface Settings
    //

    // The theme controls the look of Sublime Text's UI (buttons, tabs, scroll bars, etc)
    "theme": "{{ sublime_prefs.theme }}",

    // Set to 0 to disable smooth scrolling. Set to a value between 0 and 1 to
    // scroll slower, or set to larger than 1 to scroll faster
    "scroll_speed": "{{ sublime_prefs.scroll_speed }}",

    // Controls side bar animation when expanding or collapsing folders
    "tree_animation_enabled": "{{ sublime_prefs.tree_animation_enabled }}",

    // Controls animation throughout the application
    "animation_enabled": "{{ sublime_prefs.animation_enabled }}",

    // Makes tabs with modified files more visible
    "highlight_modified_tabs": "{{ sublime_prefs.highlight_modified_tabs }}",

    "show_tab_close_buttons": "{{ sublime_prefs.show_tab_close_buttons }}",

    // Show folders in the side bar in bold
    "bold_folder_labels": "{{ sublime_prefs.bold_folder_labels }}",

    // OS X only: Set to true to disable Lion style full screen support.
    // Sublime Text must be restarted for this to take effect.
    "use_simple_full_screen": "{{ sublime_prefs.use_simple_full_screen }}",

    // OS X only. Valid values are true, false, and "auto". Auto will enable
    // the setting when running on a screen 2560 pixels or wider (i.e., a
    // Retina display). When this setting is enabled, OpenGL is used to
    // accelerate drawing. Sublime Text must be restarted for changes to take
    // effect.
    "gpu_window_buffer": "{{ sublime_prefs.gpu_window_buffer }}",

    // Valid values are "system", "enabled" and "disabled"
    "overlay_scroll_bars": "{{ sublime_prefs.overlay_scroll_bars }}",

    // Allows tabs to scroll left and right, instead of simply shrinking
    "enable_tab_scrolling": "{{ sublime_prefs.enable_tab_scrolling }}",

    // Display file encoding in the status bar
    "show_encoding": "{{ sublime_prefs.show_encoding }}",

    // Display line endings in the status bar
    "show_line_endings": "{{ sublime_prefs.show_line_endings }}",

    //
    // Application Behavior Settings
    //

    // Exiting the application with hot_exit enabled will cause it to close
    // immediately without prompting. Unsaved modifications and open files will
    // be preserved and restored when next starting.
    //
    // Closing a window with an associated project will also close the window
    // without prompting, preserving unsaved changes in the workspace file
    // alongside the project.
    "hot_exit": "{{ sublime_prefs.hot_exit }}",

    // remember_full_screen will allow Sublime Text to start in full screen
    // mode if it was exited in full screen mode. When set to false, Sublime
    // Text will never start in full screen mode.
    "remember_full_screen": "{{ sublime_prefs.remember_full_screen }}",

    // Always prompt before reloading a file, even if the file hasn't been
    // modified. The default behavior is to automatically reload a file if it
    // hasn't been edited. If a file has unsaved changes, a prompt will always
    // be shown.
    "always_prompt_for_file_reload": "{{ sublime_prefs.always_prompt_for_file_reload }}",

    // OS X only: When files are opened from finder, or by dragging onto the
    // dock icon, this controls if a new window is created or not.
    "open_files_in_new_window": "{{ sublime_prefs.open_files_in_new_window }}",

    // OS X only: This controls if an empty window is created at startup or not.
    "create_window_at_startup": "{{ sublime_prefs.create_window_at_startup }}",

    // Set to true to close windows as soon as the last file is closed, unless
    // there's a folder open within the window.
    // On OS X, this value is overridden in the platform specific settings, so
    // you'll need to place this line in your user settings to override it.
    "close_windows_when_empty": "{{ sublime_prefs.close_windows_when_empty }}",

    // Show the full path to files in the title bar.
    // On OS X, this value is overridden in the platform specific settings, so
    // you'll need to place this line in your user settings to override it.
    "show_full_path": "{{ sublime_prefs.show_full_path }}",

    // Shows the Build Results panel when building. If set to false, the Build
    // Results can be shown via the Tools/Build Results menu.
    "show_panel_on_build": "{{ sublime_prefs.show_panel_on_build }}",

    // Preview file contents when clicking on a file in the side bar. Double
    // clicking or editing the preview will open the file and assign it a tab.
    "preview_on_click": "{{ sublime_prefs.preview_on_click }}",

    // folder_exclude_patterns and file_exclude_patterns control which files
    // are listed in folders on the side bar. These can also be set on a per-
    // project basis.
    "folder_exclude_patterns": {{ sublime_prefs.folder_exclude_patterns }},
    "file_exclude_patterns": {{ sublime_prefs.file_exclude_patterns }},

    // These files will still show up in the side bar, but won't be included in
    // Goto Anything or Find in Files
    "binary_file_patterns": {{ sublime_prefs.binary_file_patterns }},

    // File indexing parses all files in the side bar, and builds an index of
    // their symbols. This is required for Goto Definition to work.
    "index_files": "{{ sublime_prefs.index_files }}",

    // Set the number threads to use for indexing. A value of 0 will make
    // Sublime Text guess based on the number of cores. Use the index_files
    // setting to disable all workers.
    "index_workers": "{{ sublime_prefs.index_workers }}",

    // index_exclude_patterns indicate which files won't be indexed.
    "index_exclude_patterns": {{ sublime_prefs.index_exclude_patterns }},

    // List any packages to ignore here. When removing entries from this list,
    // a restart may be required if the package contains plugins.
    "ignored_packages": {{ sublime_prefs.ignored_packages }},

    // material theme settings
    "material_theme_compact_sidebar": "{{ sublime_prefs.material_theme_compact_sidebar }}",
    "material_theme_small_statusbar": "{{ sublime_prefs.material_theme_small_statusbar }}",
    "material_theme_small_tab": "{{ sublime_prefs.material_theme_small_tab }}"
}
